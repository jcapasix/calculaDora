/* 
 @description: orquesta la construccion y entrega al artefactory
*/


def ARTEFACTORY = [
  SPRINT_NUMBER : "1",         //numero de la version
  APP : "ios",              //si es android o ios
  PUBLISH_ARTEFACTORY : 1,
  UNIT_TEST : 1,
  RUTA_ARTEFACTORY:"",
  BUILD_FLAVOR:"alculadora",   //define el flavor de compilacion |DeployStore|Corporate
   ETIQUETA_SLAVE:"mac",  //"casa" //etiqueta del slave jenkins si es vacio se compila en el master,
  NAME_FILE_ARTEFACTORY:""
]

def server = Artifactory.server 'artefactoryID'


node (ARTEFACTORY.ETIQUETA_SLAVE){//etiqueta del slave ios

        try{

                stage("GET SOURCE"){
                    checkout scm
                }
 
 

                  stage("BUILD ARTEFACTORY"){
                      sh("xcodebuild -scheme Calculadora clean archive -archivePath build/Calculadora")
					   sh("xcodebuild -exportArchive -archivePath 'build/Calculadora.xcarchive' -exportOptionsPlist exportOptions.plist -exportPath build/")
                  }



                  stage("PROCESS ARTEFACTORY"){

                           def files = findFiles(glob: '**/*.ipa')

                           ARTEFACTORY.NAME_FILE_ARTEFACTORY =  getNameFile(files)

                          // TODO ARTEFACTORY.SPRINT_NUMBER = getSprintNumber(ARTEFACTORY.NAME_FILE_ARTEFACTORY)

                   }

                  stage ("PUBLISH ARTEFACTORY"){

                   ARTEFACTORY.RUTA_ARTEFACTORY = "Artefactory_IBK/sprint-${ARTEFACTORY.SPRINT_NUMBER}/${ARTEFACTORY.APP}/${env.BRANCH_NAME}/"

                   def uploadSpec = """{"files": [{"pattern": "**/*${ARTEFACTORY.BUILD_FLAVOR.toLowerCase()}*.ipa",  "target": "${ARTEFACTORY.RUTA_ARTEFACTORY}" }] }"""


                  if( ARTEFACTORY.PUBLISH_ARTEFACTORY == 1 ){
                       def buildInfo2 =  server.upload(uploadSpec)
                       server.publishBuildInfo(buildInfo2)
                  }
               }

               stage("SEND EMAIL OK"){

                       enviarMailOK("PATH : ${ARTEFACTORY.RUTA_ARTEFACTORY}","ipa <b>: ${server.url}/${ARTEFACTORY.RUTA_ARTEFACTORY}/${ARTEFACTORY.NAME_FILE_ARTEFACTORY}<b>")
               }

         }catch(Exception e){
                   stage("SEND EMAIL ERROR"){
                        enviarMailError( )
                    }
                    throw e
            }
}



@NonCPS
def getSprintNumber(nameArtefactory){

    def s = nameArtefactory =~ /SP(.*)v/

    while (s.find())  return s.group(1)

}

def getNameFile(list) {
    def name = ""
      for(int i = 0; i < list.size(); i++) {
          name = list[i].name
      }
    return name
}


def enviarMailOK( subject,   body){
    enviarMail("EnvioCorreo - Ejecucion Exitosa   ${subject} ", "Ejecucion exitosa  <BR> ${body}")
}

def enviarMailError( ){
    enviarMail("EnvioCorreo - Error al ejecutar ", "Error al ejecutar por favor revisar <br> ${env.BUILD_URL}")
}

def enviarMail(subject, body){
    def date = new Date().format( 'dd/MM/yyyy HH:mm:ss' )
    def BODY_MAIL = "${body} <br> a las ${date} <br><br><br> Por favor no replicar este correo."
    def DEFAULT_RECIPIENTS="jcapasix@gmail.com"

    mail( body: "${BODY_MAIL}",
          from: "everisdemo123@gmail.com",
          subject: "${subject}  ${date}",
          mimeType: 'text/html',
          to:  "${DEFAULT_RECIPIENTS}"
    )
}
